[["index.html", "Examining Algorithms Chapter 1 Preface", " Examining Algorithms Nathaniel Forde 2021-03-04 Chapter 1 Preface What this book is "],["the-average-man.html", "Chapter 2 The Average Man 2.1 …and Expected Value 2.2 Probability: Twin Aspects 2.3 Small Worlds and Statistical Inference 2.4 Utility Curves", " Chapter 2 The Average Man In the 1840s the Average man stalked the nightmares of Augustin Cournot. The mathematician was haunted by a melange of imagined parts. A Frankenstein’s monster of mismatched limbs, variously soldered, stapled or sown at the joints. He worried that no one but a “physical monstrosity” could exhibit the average, weight, height and other mean attributes in one body. (Stigler 2016) But fantastical fears were no bar to a useful mathematical fiction. The notion of averaging was a technological breakthrough - applications of averaging multiplied without cease: polling, gambling, forecasting - statistics were recorded everywhere, compounding one on another; averages of averages tenuously tethered to observable facts by layers of abstraction and scales of measurement. Slowly, doubts began to creep back into the statistics. In the 1970s the psychologist Paul Meehl would worry that such brute approximations had stifled the development of the softer sciences and contributed to the mis-measurement of man. He would go on to elaborate twenty features of psychological science which made such measurement constructs inapt, unreliable and difficult to clearly falsify. This was progress! (Meehl 1978) He then showed that the methods of validating such constructs were the main culprit and the likely cause of psychology’s implausible claims to concrete, replicable results. Around thirty years later some of the same replication issues would come to be called a crisis. Cournot was right to fear. Seen from the perspective of a patient the difficulties are more urgent and stark. In 2019 Esme Yang would write with hope of the comfort given by a diagnosis, the knowledge that she was not “pioneering an inexplicable experience.”1 To find yourself described in the DSM provides: a framework and the glimmer of a cure, a chance to slot yourself into a category, a community of care and a medicinal regime. Frustrating then when the categories themselves are in flux. Diagnostic criteria arrayed over page after page attempting to capture the elusive core of a psychological dysfunction. Descriptions are derived from clinical interviews correlated and meshed with genetic markers, then poorly mapped to a family of ailments. Neither clearly bipolar disorder nor manic depression, schizophrenia, psychosis or schizo-affective disorder. But an idiosyncratic presentation (as they all must be), uniquely felt and individually suffered. Wang’s collection of schizophrenias defy easy taxonomy “because there are just so many different ways in which people can develop a syndrome that looks like schizophrenia … as we now define it.” The task then becomes one of coping with uncertainty and adjusting expectations. It’s not so exact a science that you can measure twice and cut once. The measurement schemes change and you need multiple cuts. You measure out the impact of treatments and the trade-offs - what’s non-negotiable and how many side-effects are acceptable? What works for you versus what’s advised by the professionals. Sterile cost-benefit considerations become suddenly dramatic and life changing. 2.1 …and Expected Value There is an algorithm beloved by bureaucrats. An unsung hero of administrators and accountants. An algorithm both ubiquitous and under appreciated. It’s pivotal for nearly every business and informs the actions of tech firms and policy makers the world over. It is only mildly hyperbolic to say that understanding this formula unlocks wealth and power. The algorithm lies at the heart of online A/B testing, all policy analysis, sound strategy and poker play. \\[ EV(O)_{p} = p_{1}u(o_{1}) + p_{2}u(o_{2}) + ... + p_{k}u(o_{k}) \\] The expected financial value of a random process is just the sum of the utility (typically dollar outcomes) weighted by their probabilities. Outcomes can vary from deals of cards, to customer transactions, election results, continued sanity. Pascal can argue sincerely that such considerations compel even belief in God. The infinite downsides of hell at any likelihood ought to compel even the cynical sceptic. But the formula, glossed as a rule for rational action, merits your attention for more mundane wagers too. If you intend to maximise your expected value, the meaning of probability is not an idle concern.2 While statistics are often tortured to rubber stamp decisions and probabilities are abused to fit policy prescriptions with false precision, the crisp clarity of the rule has an enduring appeal that promises to sift the murky swamps of Big Data. It’s a scalpel that anyone can wield to parse the syntax of statistical jargon and carve answers from an abstract space of probabilities. “What’s my expected return? My likely life-quality?” - a simple question, with a surprisingly complex answer. Decision theory is an abstract formalism which purports to account for how you ought to reason under uncertainty, conditional on knowing your own mind, what you want and the likelihood of those outcomes. Wrestling with a diagnosis of schizophrenia you weigh your future in the face of sickness while knowing your mind could fail in the act, knowing, perhaps, you’re not yourself. Schizophrenics are involuntarily detained if a medical professional deems them to have lost sufficient “insight”3 , but the stated dysfunction assumes that these kinds of insight should be transparent when the psychiatric crisis is resolved. We’ll see that the level of insight assumed by decision theory is, at best, hard won and far from transparent. There is a secondary complication in that whenever expected utility as used as an explanatory model of rational action, there is a risk of pivot, a point where it is substituted for more obscure black-box optimisation techniques over metrics of profit or overall accuracy. The focus switches from modelling the consumer or the patient to modelling returns based on the consumer and the firm’s expected value. Swapping a customer catering model for a customer-as-commodity perspective focused on profit in aggregate and customer acquisition. The tendency is common because profit overwhelms all other priorities, but the loss of understanding typically amounts to a longer term net-loss. Shareholders take comfort from increased profit and algorithms deployed at scale, but it’s rare that any single algorithm actually or always maximises the available profit. This dynamic enforces a kind of inescapable see-saw motion where the consumer modeling exercise goes through a constant feedback loop. A good model (informal or formal) of human needs and wants feeds a better a predictive model of individual action. When the latter fails we go back to the utility curves and the algorithm of expected value because it is (if not reliably predictive) a rich and deeply explanatory model of human action under uncertainty. 2.2 Probability: Twin Aspects Probability emerged slowly and with a dual aspect. On one tradition probability refers to the long run tendency of a random process, on another probability is construed as the degree of belief in an outcome. On the first (frequentist) interpretation a probability distribution has certain fixed theoretical characteristics: as in a uniform probability distribution of a fair coin where all outcomes are equally likely, or as with the normal distribution where most outcomes cluster symmetrically about a central average. On the second (Bayesian) reading the characteristics of the probability distribution are learned from the data. The controversy centres around the fact that it’s unclear how a frequentist could ascribe probabilities to unique events. Without appeal to a large set of observations (or known theoretical distribution) the claim that an event appears frequently or infrequently is not well defined. Consequently, tabulations of probability appear inappropriate for claims of unique or rare events. In contrast the Bayesian is content to ascribe probabilities to any all partial beliefs no matter how specific. For the Bayesian, the probability calculus is a set of edicts about how to rationally manage and modulate your beliefs. So it’s acceptable to have a probabilistic belief in rare cases so long as you update those probabilities with new data when available. These two approaches are united by the Law of Large numbers which states that as the size of our sample increases our sample average will converge to the expected realisation of the theoretical process. \\[ \\frac{1}{N} \\sum_{i = 1}^{N} O_{i} \\text{ converges to } E(O) \\text{ as } N \\text{ approaches } \\infty \\] In this graph we have fixed a Poisson distribution with a mean of 4.5 and can see three examples of how consecutive averaging from the increasing sample sizes results in a closer and closer convergence to the (true) population mean. # set up the ground truth np.random.seed(100) sample_size = 10000 expected_value = lambda_ = 4.5 poi = np.random.poisson N_samples = range(1, sample_size, 100) for k in range(3): samples = poi(lambda_, sample_size) partial_average = [samples[:i].mean() for i in N_samples] plt.plot(N_samples, partial_average, lw=1.5, label=&quot;average \\ of $n$ samples; seq. %d&quot; % k) plt.plot(N_samples, expected_value * np.ones_like(partial_average), ls=&quot;--&quot;, label=&quot;true expected value&quot;, c=&quot;k&quot;) plt.title(&quot;Convergence of the average of \\n random variables to its \\ expected value&quot;) plt.ylabel(&quot;average of $n$ samples&quot;) plt.xlabel(&quot;# of samples, $n$&quot;) plt.legend() lims = plt.ylim(4.35, 4.65) plt.show() Though common knowledge today, in 1650 ``the very concept of averaging is [new]… and most people could not observe an average because they did not take averages.(Hacking 2006) Systematically grappling with the implications of observations is a somewhat recent human endeavour - one which is far from perfected. This tendency is now fundamental to the interpretation of probability. Take a game with fixed and fair odds and we see that repeated play will converge over time because of characteristics which govern the process. Dice are a homely example. In the wild we never know the characteristics which cause the observed spread of outcomes, but such is the influence of gambling on probability, that we assume there exists a stable pattern to be gamed. Partially this is pragmatic, the maths is more tractable if we can assume a well behaved underlying process. The results are compelling: The Normal (Bell Curve) distribution, the Poisson distribution the Bernoulli distribution (to name a few) are all rightly famous. Their shapes are characteristics of innumerable random processes. The distributions cleanly circumscribe and corral likely patterns of events. normal = np.random.normal(0, 1, 1000) poisson = np.random.poisson(4.5, 1000) uniform = np.random.uniform(-4, 4, 1000) binomial = np.random.binomial(10, .8, 1000) bins = np.linspace(-5, 10, 100) h1 = plt.hist(normal, bins, alpha=0.5, label=&#39;normal(0, 1)&#39;) h2 = plt.hist(poisson, bins, alpha=0.5, label=&#39;poisson(4.5)&#39;) h3 = plt.hist(uniform, bins, label=&#39;uniform(-4, 4)&#39;) h4 = plt.hist(binomial, bins, label=&#39;binomial(10, .8)&#39;) plt.legend(loc=&#39;upper left&#39;) plt.title(&quot;Variety of distributions with parameter specifcations&quot;) plt.xlabel(&quot;Realisation of Variable &quot;) plt.ylabel(&quot;Frequency of Observation&quot;) plt.show() But the gambling paradigm clouds the fact that in practice we start on the left side of the law of large numbers (with samples) and we often start with small numbers resulting from a unknown number of data-generating processes. Well behaved probability distributions are rare beasts; a tiny fraction of the world’s arbitrary menagerie. The fundamental question in probability is not whether probability is a measure of belief or frequency - it is whether we can safely assume that the underlying process adheres to a known model? The Bayesian focus is to try and learn from the new data the expected characteristics of the underlying process, while the Frequentist tries to gauge the accuracy of their assumptions about the underlying process. Both are attempts to validate the structure of the model’s theoretical distribution to inform inference. If we can’t validate a model, we’re better learning what we can from the sample, trusting to wide confidence intervals and worst scenario planning. But in all cases when we need to make a decision, the following questions are inescapable : What are your expectations based on? How do they figure in our choices, and can we use them to improve our outcomes? 2.3 Small Worlds and Statistical Inference Anissa Weieir and Morgan Geyser, later diagnosed with schizopoty, were in 2017 trailed for the attempted murder of their friend Payton. While believing themselves to be acting at the behest of Slendar Man, they were ``willing to forgo even friendship for the sake [their] version of unreality\".4 Just as in the depth of an obsession reality can be warped by a psychotic focus, a statistical model will accentuates some parts and ignores others. This narrowness can have devastating effects if deployed without care. But prediction is a visceral need, unavoidable, it precedes the sophistication of probability in any order of analysis. Without some regularity between \\(X, Y\\) we can only interpret their collisions as timorous noise. But even when there is a better than arbitrary correlation between \\(X, Y\\) we’ll insist on ascribing a measurable probability to their association. Heuristics will kick in, and confidence will grow out of proportion to the evidence. So whether we view probabilities as a measure of credibility or frequency, the focus is always on a process which in reality reveals a pattern under repetition. Even tenuous connections can be enough to cause havoc. Models, more often than not, are deliberate simplifications of complexity, attempts to formulate a unobserved process within a mathematical structure. Lego-like versions of the world are built and rebuilt, in which we bash parts together to see what reliably sticks. Forget about the pieces we don’t own. Count the pairs of blocks that: match, wedge, smash, click-into-place or break, then draw out the ratio of success and the spread of outcomes. Parse out the details of how reds go with greens, and blues with yellows. This is your sample distribution. The expected gain depends on both this uncertainty, measured in this small world, and the finer points of statistical inference. A [small world] is… completely satisfactory, only if it is actually a microcosm, that is, only if it leads to a probability measure … that can be written down explicitly pg 88 (Savage 1954)] . The danger of shrinking your world comes when you mistake the map for the territory and act on that delusion. Small worlds are machines for figuring out expected values of a statistical process. We shrink the parameter set to better measure the variance and flux throughout the system. For any hypothetical system there can be multiple plausible approximations of the underlying process which need to be assessed comparatively on their “goodness” of fit. We iterate through new and improved versions, each an attempt to make a conjectural connection between \\(X, Y\\) mathematically precise. But once built, they embed the errors and assumptions made in their design. McElreath dubs them Golems, primed and then loosed on the world, insensitive to subtlety and context they perform only as instructed. Consider how a basic regression model tries to predict an outcome \\(Y\\) as linear function of some observed features \\(X\\): \\[ Y = const + \\beta X + \\epsilon \\] where \\(\\epsilon\\) is a random variable representing the error (or noise). A modest notational device for disaster. While \\(const, \\beta\\) are parameters estimated by an optimisation process to ensure the equation fits the data as neatly as possible. In the plot below we have a series characterised by change. After the first shock we can refit the model so that the line tracks well with the evolving data. After the second shock we try another refit, but the range the and variance of the data makes our basic model a poor fit, i.e. the data no longer exhibits a linear relationship. This presents three examples of error in the modelling process: (i) it’s difficult to identify (in the moment) those changepoints in the data which reflect structural change, (ii) the linearity assumptions that go into the model are sound but the parameters need be re-estimated based on the new data and (iii) the third linear model is simply a terrible match for the pattern in the data. ### Piecewise Linear Fits x = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], dtype=float) y = np.array([5, 12, 9, 11, 13, 10, 28.92, 42.81, 56.7, 70.59, 84.47, 75.36, 112.25, 100.14, 140.03, 3, 70, 300, 5, 100, 50], dtype=float) def piecewise_linear(x, b1, a1, b2, a2, b3, a3): funcs = [lambda x:b1*x + a1, lambda x:b2*x + a2, lambda x:b3*x + a3] conds = [x &lt; 7, ((x &gt;= 7) &amp; (x &lt; 15)), x &gt; 15] return np.piecewise(x, conds, funcs) p , e = optimize.curve_fit(piecewise_linear, x, y, method=&quot;trf&quot;) a, b = polyfit(x, y, 1) xd = np.linspace(0, 20, 1000) plt.plot(x, y, &quot;o&quot;) plt.plot(x, a + b * x, &#39;--&#39;, label=&quot;Global fit: {b: .2f}x + {a: .2f}&quot;.format(b=b, a=a)) plt.plot(xd, piecewise_linear(xd, *p), label=&quot;Linear fit 1: {b: .2f}x + {a: .2f} \\n&quot; &quot;Linear fit 2: {b1: .2f}x + {a1: .2f} \\n&quot; &quot;Linear fit 3: {b2: .2f}x + {a2: .2f}&quot;.format(b=p[0], a=p[1], b1=p[2], a1=p[3], b2=p[4], a2=p[5])) plt.axvline(x=7, color=&#39;red&#39;) plt.axvline(x=15, color=&#39;red&#39;) plt.title(&quot;Piecewise Linear Fits of Series at Changepoints&quot;) plt.legend() plt.show() Every model is a guess as to the implicit order in apparent noise. Sometimes there is no order, and other times the patterns is too subtle for a dumb model to capture. In practice you never really know whether a single new error stems from a misfit but appropriate model or an entirely inappropriate model. As we increase our number of sample fits we hope to better approximate the true linear process (if any) generating the data. Imagine now that the data points in Figure 3 are repeatedly re-speckled over the canvas. We can refit a new model for each set of scattered data points and each refit gives us a new sample values for $ const, $. If the underlying data generating process is stable, then the parameter fits will converge to the correct values of \\(const, \\beta\\); correct in the sense that they can be used to draw the line of best fit for the data. A statistically stable process is one that can be modelled with errors \\(\\epsilon\\) normally distributed around \\(0\\), so that the model will be because \\(E(\\epsilon) = 0\\). Our predictions will overshoot in some cases but on the whole the errors up and down will cancel each other out. “Typically, the assumptions in a statistical model are quite hard to prove or disprove, and little effort is spent in that direction. The strength of empircal claims made on the basis of such modeling therefore does not derive from the solidity of those assumptions. Equally, these beliefs cannot be justified by the complexity of the calculations… These observations lead to uncomfortable questions” (Freedman 2009) Forecasting with the parameters of best fit minimises our forecast errors because the fluctuations are stable about the centre of the line. These are the required assumptions for a process to exhibit the tendency of regression towards the mean. If they’re not met, we will see poor parameter estimates and wild swings away from the linear path. The fundamental statistical assumption here is about the properties of our mistakes! The model is less plausible if our judgements are made in the grip of a delusion. 2.3.1 Modeling: Improper Assumptions and Skewed Expectations Below we build two sampling distributions based on different models of an underlying processes. One in which the errors are independent, normally distributed around \\(0\\) and in the other the errors are correlated in a sine-wave like pattern, increasing and decreasing periodically. This is akin to the difference between measuring error when predicting the heights of randomly sampled people versus predicting the sales volumes on randomly selected days of the week. A random sample of daily sales risks clumping weekends together and skewing the expected values. No such risk exists when sampling from independent individuals. #### Sampling Distributions of Linear Fits #### Build True Model N = 1000 X = np.random.uniform(0, 20, N) uncorrelated_errors = np.random.normal(0, 10, N) correlated_errors = np.random.uniform (0, 10) + np.sin(np.linspace(0, 10*np.pi, N)) \\ + np.sin(np.linspace(0, 5*np.pi, N))**2 \\ + np.sin(np.linspace(1, 6*np.pi, N))**2 + .6*X Y_corr = -2 + 3.5 * X + correlated_errors Y = -2 + 3.5 * X + uncorrelated_errors population = pd.DataFrame({&#39;X&#39;: X, &#39;Y&#39;: Y, &#39;Y_corr&#39;: Y_corr}) fits = pd.DataFrame(columns=[&#39;iid_const&#39;, &#39;iid_beta&#39;, &#39;corr_const&#39;, &#39;corr_beta&#39;]) for i in range(0, 1000): sample = population.sample(n=100, replace=True) Y = sample[&#39;Y&#39;]; X = sample[&#39;X&#39;] ; Y_corr = sample[&#39;Y_corr&#39;] X = sm.add_constant(X) iid_model = sm.OLS(Y, X) results = iid_model.fit() corr_model = sm.OLS(Y_corr, X) results_2 = corr_model.fit() row = [results.params[0], results.params[1], results_2.params[0], results_2.params[1]] fits.loc[len(fits)] = row fits.boxplot() plt.suptitle(&quot;The Sampling Distribution of Parameters for a Linear models&quot;) plt.title(&quot;Based on 1000 fits on 100 observations&quot;) plt.show() In the case with independent errors the expected value for our parameter estimates match almost exactly the true values of the process. In the second model with correlated errors the parameter estimate for our constant is 4.9 which is significantly different from the true value of -2, and will lead to systematically skewed predictions. Statistical models are just algebraic equations where we use regular sampling to solve for \\(Y\\) from \\(X\\). Because Y is also a random variable the regression model encodes a conditional expectation result. def draw_gaussian_at(position, sample, ax_main=None, model=&#39;iid&#39;, color=&#39;k&#39;, **kwargs): filter_var = round(sample[&#39;X&#39;], 0) == position avg = sample[filter_var][&#39;predicted_Y_&#39; + model].mean() min = sample[filter_var][&#39;Y&#39;].min() max = sample[filter_var][&#39;Y&#39;].max() dist = pd.Series(sample[filter_var][&#39;predicted_error_&#39;+ model].values) kde = sm.nonparametric.KDEUnivariate(dist) kde.fit() density = kde.density density /= density.max() density *= 1 y_axis = np.linspace(min, max, len(density)) label = &quot;Expected error X = {x:}: {err: .2f}&quot;.format(err = sample[filter_var][&#39;predicted_error_&#39;+ model].mean(), x=position) ax_main.plot((density + position), y_axis, color=color, label=label) sample = population.sample(n=1000, replace=True, random_state=100) true_model = sm.OLS(sample[&#39;Y&#39;], sample[&#39;X&#39;]).fit() error_model = sm.OLS(sample[&#39;Y_corr&#39;], sample[&#39;X&#39;]).fit() sample[&#39;predicted_Y_iid&#39;] = true_model.predict(sample[&#39;X&#39;]) sample[&#39;predicted_Y_corr&#39;] = error_model.predict(sample[&#39;X&#39;]) sample[&#39;predicted_error_iid&#39;] = sample[&#39;Y&#39;] - sample[&#39;predicted_Y_iid&#39;] sample[&#39;predicted_error_corr&#39;] = sample[&#39;Y&#39;] - sample[&#39;predicted_Y_corr&#39;] fig, ax1 = plt.subplots() ax1.plot(sample[&#39;X&#39;], sample[&#39;Y&#39;],&#39;o&#39;) ax1.plot(sample[&#39;X&#39;], sample[&#39;predicted_Y_iid&#39;]) for each in [2, 5, 15]: d = draw_gaussian_at(position=each, sample=sample, ax_main=ax1, model=&#39;iid&#39;, color=&#39;r&#39;) plt.title(&quot;Error Distributions around predicted Y values for the {model:}&quot;.format(model=&#39;iid model&#39;)) plt.legend() plt.show() \\[ E(Y_{i} | X_{i} = x )\\] For fixed values of X, the predictions \\(Y_{i}\\) can be spread in a pattern enforced by the various ways we can realise the linear function with estimates for \\(\\beta\\) and \\(const\\). But the regression model selects the best parameter values to minimise the squared prediction error and represent the conditional expected distribution of \\(Y\\). “The statement that regression approximates the [Conditional Expectation Function] lines up with our view of empirical work as an effort to describe the essential features of statistical relationships without necessarily trying to pin them down exactly” p38 - (Angrist and Pischke 2008) The consequent point predictions for \\(Y\\) are always expected values, skewed by the how the parameters are realised from sample data as much as by poor choices in model design and predictive features. So too then any measures of expected utility based on these models or inferences from these distributions. 2.3.2 Frequentism: Inference from Expected Frequency Making inference from a model is delicate thing. Even simple cases come with controversy. Count the number heads in a series of 5 successive coin flips, then repeat the process 1000 times and you’ll arrive at a proportion which characterises that process. If it’s a fair coin the long run expected result will be half the number of your coin flips. If the coin is weighted you might have as few as 0. This is the binomial distribution, and it really shines when you’re trying to gauge fairness. If a process is biased, the distribution will be skewed. We can use this fact for inference. Consider a dispute over whether the game was rigged. \\[ H_0 : \\text{ true proportion of heads } = 0.4 \\] \\[ H_1 : \\text{ true proportion of heads } = 0.5 \\] samples = 5 prop = 0.4 successes = 3 X = binom(samples, prop) x = X.rvs(1000) points = sns.distplot(x, hist=False, kde=True).get_lines()[0].get_data() prob = 1 - X.cdf(2) z = points[0] y = points[1] plt.fill_between(z,y, where = z &gt;= successes, color=&#39;r&#39;, label=&quot;Probability &gt;= 3:{p: .2f}&quot;.format(p=prob)) plt.fill_between(z,y, where = z &lt; successes , color=&#39;g&#39;, label=&quot;Probability &lt; 3: {mean: .2f}&quot;.format(mean=1-prob)) plt.legend(loc=&#39;upper right&#39;, title=&#39;Legend&#39;) plt.title(&quot;The P-Value for a sample of 5 with &gt;=3 head \\n given a biased coin with expected proportion 0.4&quot;) xlim = plt.xlim((0, 5)) ytck = plt.yticks([]) plt.show() Take \\((H0)\\) as given then if we observe a sequence: \\[ (3in5): H, H, H, T, T\\] what does it say about the possibility that we’re being hustled? If the coin is biased, then the count of heads in repeated sampling will reflect a clear bias. For any new data we can check if the data is consistent with the data generated by the biased coin. The pattern of reasoning is straightforward (i) make some assumptions about the structure of the random process under investigation, (ii) tease out the consequences of these assumptions (iii) evaluate the incoming data against these consequences to see if you need to revise your assumptions. The frequentist asks, does the data looks weird given the assumed shape of our probability distribution? [I]n statistical terms \\(H_{0}\\) [the null hypothesis] refers to a probability model and the very word `model’ implies idealization. With a very few possible exceptions it would be absurd to think that a mathematical model is an exact representation of a real system… We use the term to mean that in the current state of knowledge it is reasonable to proceed as if the hypothesis was true.\" pg 31 (Cox 2006) In this instance the shape of the binomial distribution defined by a 0.4 biased coin allows for significantly greater than 5% chance for observing the above sequence. So we do not have enough reason to reject \\((H0)\\) at the traditional threshold. By design the assumed distribution builds in characteristics of long-run variance of the process, and the slim threshold for rejection is designed to minimise incorrect rejections of \\((H0)\\). We should remain suspicious that we’re being conned. However, with a low number of observations the sample distribution is unlikely to be properly representative. This makes even small p-value thresholds unreliable. We cannot blindly take a sample poll to imply the spread or volatility of a population, and with low or un-representative samples it’s hard to justify any kind of inference from expectation, since we are not in a position to justify the choice of the null model either! If your hypothesis is both derived and validated against small samples, you risk being swayed by recent observations. More fundamentally the notion of statistical significance usually cannot falsify the hypothesis under consideration. The sheer number of auxiliary variables that you might need to control for, makes the practical task of definitively rejecting the null almost impossible. There are too many imagined ways in which the auxiliary conditions, sufficiently modified, would have resulted in observations that corroborate the null model. This problem is especially acute in psychological science where the auxiliary contingencies of designing a measurement scale and checking diagnostic criteria are almost always questionable. So the null hypothesis is not confirmed, but not refuted either, it is just preserved in useless stasis. “[I]t did not get integrated into the total nomological network, nor did it get clearly liquidated as a nothing concept, it did not get killed or resurrected or transformed or solidified; it just kind of dried up and blew away…” pg807 in (Meehl 1978) 2.3.3 Bayesian Inference: Inference to Expected Value If instead we use probability to calibrate our beliefs, then we can be more explicit in our assessment of \\((H0), (H1)\\). Let’s assume that our prior beliefs about whether the game is rigged is 50/50. Then we evaluate the two hypothesis using Bayes’s rule for incorporating our prior belief and the data. The Bayesian asks whether our hypothesis is a good explanation of the data compared to alternatives. How, upon observing the data, should we view our hypothesis? \\[ \\overset{posterior}{p(H_{i} | Data)} = \\frac{\\overset{prior}{p(H_{i})}\\overset{liklihood}{p(Data | H_{i})}}{\\underset{evidence}{\\sum_{i=1}^{i =K} p(Data | H_{i})p(H_i)}}\\] where $ 1 i K$ spans the ways in which the data could have been realised across all competing hypotheses.Then, in our toy example, we have: \\[ \\frac{p(H_1 | 3 in 5)}{p(H_{0} | 3 in 5)} = \\frac{\\frac{.5\\cdot .23}{.5\\cdot .32 + .5 \\cdot .23}}{\\frac{.5\\cdot .32}{.5\\cdot .32 + .5 \\cdot .23}} = \\frac{.57}{.42} \\] which would lead us to infer that the coin was fair. The really radical move in the Bayesian setting is that you’re allowed to ascribe a probability to any event regardless of whether there is any long-run sequence to observe. You may know nothing about your opponent or the coin, but for Bayesians this is no bar to assigning suspicion in the form of expected probability, so long as you act in accordance with the axioms of probability and weigh the probabilities accordingly. In particular it promotes the direct comparison of competing hypotheses conditional on the evidence. It’s this free choice of prior which can seem arbitrary and unmotivated or even paradoxical, but in practice probabilities are rarely ascribed entirely without reason and it’s frankly irresponsible to ignore those reasons. ``When a piece of evidence E is produced in a court investigating the guilt G or innocence I of the defendant, it is not enough merely to consider the probability of E assuming G; one must also contemplate the probability of E supposing I. In fact, the relevant quantity is the ratio of the two probabilities. Generally if evidence is produced to support some thesis, one must also consider the reasonableness of the evidence were the thesis false. Whenever courses of action are contemplated, it is not the merits or demerits of any course that matter, but only the comparison of these qualities with those of other courses.’’ in (Lindley 1993) Neither the Bayesian or Frequentist analysis ends with these simple calculations, both should continue to probe the limits of each hypothesis. We’d have to consider things like sample size, sensitivity testing, model performance, the cost of errors and appropriateness of the priors. The point is just that there are reasons for dispute. Bayesian inference acts like a logic engine for evidence, whereas the frequentist approach is more focused on diagnosing the possibility of error. In general they are complementary methods, and when they conflict the assumptions should be scrutinised. The frequentist evaluation of our biased coin is very sensitive to the choice of hypotheses, while the Bayesian approach is influenced by the choice of prior. Why set up a significance test against assumed cheating rather than assumed fairness? Why attribute equal weight to both hypotheses? Why use a 5% threshold if you’re concerned about systematic cheating? This example shows the heart of the conflict in the dual aspect of probability. There is enough latitude in the manner in which we set up a probability model that the mathematics of inference can yield inconsistent results. Both offer strategies for managing uncertainty, but both approaches come with baggage and in practice not all tests are equally taxing. Consider a more concrete example in the Bayesian spirit. 2.3.4 Example: Website Traffic Websites and apps collect traffic and log interactions. Your details are captured and pulled into vast aggregates of consumer data. I can route and re-route your trajectory across an online environment. Applying the same pressures to tens of thousands of others, we can trace out how the topology of particular sites throw up speed bumps on the customer’s journey. Imagine we’re running a website which aims to funnel customers through to a number of different purchase plans. The historic patterns are relatively stable with only 10% of customers dropping out of our conversion funnel on a daily basis. We can sample actions online (Figure 7) under differing pressures with a view to evaluating expected values of repeated coercive prompts. ### Multinomial distribution m_var = stats.multinomial(n=100, p=[.3, .4, .2, .1]) m_var_sample = m_var.rvs(1000) m_var_2 = stats.multinomial(n=100, p=[.3, .4, .1, .2]) m_var_2_sample = m_var_2.rvs(20) base = datetime.datetime.today() - datetime.timedelta(days=1000) df = pd.DataFrame(m_var_sample, columns=[&#39;plan_1&#39;, &#39;plan_2&#39;, &#39;plan_3&#39;,&#39;no_plan&#39;]) df = df.append(pd.DataFrame(m_var_2_sample, columns=[&#39;plan_1&#39;, &#39;plan_2&#39;, &#39;plan_3&#39;, &#39;no_plan&#39;]),ignore_index=True) df[&#39;totals&#39;] = df[&#39;plan_1&#39;] + df[&#39;plan_2&#39;] + df[&#39;plan_3&#39;] + df[&#39;no_plan&#39;] df[&#39;plan_1_rate&#39;] = df[&#39;plan_1&#39;] / df[&#39;totals&#39;] df[&#39;plan_2_rate&#39;] = df[&#39;plan_2&#39;] / df[&#39;totals&#39;] df[&#39;plan_3_rate&#39;] = df[&#39;plan_3&#39;] / df[&#39;totals&#39;] df[&#39;no_plan_rate&#39;] = df[&#39;no_plan&#39;] / df[&#39;totals&#39;] date_list = [base + datetime.timedelta(days=x) for x in range(len(df))] df.index = date_list for i, column in enumerate([x for x in df.columns if &#39;rate&#39; in x]): ax = plt.plot(df[column], label=column) plt.title(&quot;Outcomes of Signup Process after Website Change&quot;) plt.legend(loc=&quot;upper left&quot;) xticks= plt.xticks(rotation=45) plt.show() Assume the particular values for each plan, then the expected value of customer journey is just: \\(p_{1}\\$(o_{1}) + p_{2}\\$(o_{2}) + p_{3}\\$(o_{3}) + p_{4}\\$(o_{4}) = .3*\\$10 + .4*\\$7 + .2*\\$12 + .1*\\$0 = \\$8.20\\) Now imagine there was a change to the website and we observe the following pattern for the next 20 days. The change was made on the hypothesis (\\(H+\\)) that it would bring a positive boost to revenue. How much more positive? A slight expected increase makes it harder to conclusively reject the \\(H+\\) even in the fact of contrary indicators. If we observe the above pattern, then what is the new expected value? Have we decisively falisifed \\(H+\\)? From the frequentist point of view the macro distributional properties haven’t significantly changed. But given what we know about the change to the website it would be foolish to accept such a static distributional assumption. Looking only at the small sample of new data, the variance will be large and the estimates of rates of sign-up for each plan will be unstable. Following the Bayesian paradigm we can condition our expectations on the new data, the old data or all the data. #### Calculate Expected Revenue def expected_revenue(posterior_samples): return 10*posterior_samples[:, 0] + 7*posterior_samples[:, 1] + \\ 12*posterior_samples[:, 2] + 0*posterior_samples[:, 3] full_data = df[[&#39;plan_1&#39;, &#39;plan_2&#39;, &#39;plan_3&#39;, &#39;no_plan&#39;]] weird_data2 = df[[&#39;plan_1&#39;, &#39;plan_2&#39;, &#39;plan_3&#39;, &#39;no_plan&#39;]].tail(20) normal_data = df[[&#39;plan_1&#39;, &#39;plan_2&#39;, &#39;plan_3&#39;, &#39;no_plan&#39;]].head(1000) # Bayesian Posterior multinomial_posterior_new = np.random.dirichlet(np.array([100, 100, 100, 100]) + np.array(weird_data2.sum()), size=1000) # Empirical Bayes multinomial_posterior_full = np.random.dirichlet(np.array([100, 100, 100, 100]) + np.array(full_data.sum()), size=1000) # Bayesain Posterior Prior Data multinomial_posterior_old = np.random.dirichlet(np.array([100, 100, 100, 100]) + np.array(normal_data.sum()), size=1000) multinomial_posterior_new_empirical_prior = np.random.dirichlet(np.array([300, 400, 200, 100]) + np.array(weird_data2.sum()), size=1000) multinomial_posterior_crazy_prior = np.random.dirichlet(np.array([100, 400, 500, 0]) + np.array(weird_data2.sum()), size=1000) expected_value_new = expected_revenue(multinomial_posterior_new) expected_value_old = expected_revenue(multinomial_posterior_old) expected_value_full_data = expected_revenue(multinomial_posterior_full) expected_value_new_bias = expected_revenue(multinomial_posterior_new_empirical_prior) expected_value_crazy = expected_revenue(multinomial_posterior_crazy_prior) h1 = plt.hist(expected_value_new, histtype=&#39;stepfilled&#39;, label=&quot;Expected Revenue New (20) Obs Flat Prior&quot;, bins=50) h2 = plt.hist(expected_value_old, histtype=&#39;stepfilled&#39;, label=&quot;Expected Revenue Old Obs Flat Prior&quot;, bins=50, alpha=0.8) h3 = plt.hist(expected_value_full_data, histtype=&#39;stepfilled&#39;, label=&quot;Expected Revenue Full Obs Flat Prior&quot;, bins=50, alpha=0.8) h4 =plt.hist(expected_value_new_bias, histtype=&#39;stepfilled&#39;, label=&quot;Expected Revenue New (20) Obs Empirical Prior &quot;, bins=50, alpha=0.8) h5 = plt.hist(expected_value_crazy, histtype=&#39;stepfilled&#39;, label=&quot;Expected Revenue New (20) Obs Optimistic Prior &quot;, bins=50, alpha=0.8) plt.title(&quot;Expected Revenue of Multinomial Posterior given Data&quot;) plt.legend(loc=&quot;upper left&quot;) plt.show() The above graph illustrates the spread in values expected revenue calculated on different slices of our data using Bayes Rule. Using a large number of observations, the influence of our priors are minimal and washed out by the data, giving us a strong point estimate with low variance stable around 8.2, but since the recent data involves a step change, we might be better off ignoring the old data. But we can also see that if we condition our expectations only on the new data with different priors drawn from the past data or hope, we can positively bias our expectations. Suppose we’re naive and accept either the optimistic prior or retain a frequentist approach, and accept that the website change is associated with a slight drop in revenue, do we revert to the old website or try to explain the dip by contingencies of the market and preserve our test for another thirty days? This pattern is not rare. Nearly all substantial decisions are made with small samples in circumstances where past behaviour is not a guide. Past behavioural patterns are exactly what we’re trying to avoid or change. If you want to know whether the change on your website will drive a material change in financial revenue, you won’t have long run patterns to rely on, and it’s an open question on how to weight the new data. If you want to judge the long term consequences of a new symptom the same limitation of information applies. All models smuggle-in a host of statistical assumptions and these can be range from reasonable to absurd. Even when reasonable they’re only supported by large sample sizes, and most questions of interest are driven by novelty (or specificity) that short circuits appeal to robust patterns of history. Reasoning from small samples is common, best done with caution and plenty of caveats, but better reason than not. Expectations should be modified accordingly. 2.4 Utility Curves 2.4.1 The Stakes: From Utility to Indifference Our views of probability can flex up and down in response to facts, but it’s less clear how our estimates of utility change. Too much of a good thing often tends to the bad. So we dabble, sample and share. In pursuit of variety we swap our goods, shunning stale options in favour of the novel exchange. For a given good we can differ in our appetites but it’s relatively straightforward to find the point where - one more donut is one too many. While it can be a bit unclear how we should measure utility, once we’ve decided on a metric the mathematical characteristics are meaningful. If the scale is donuts, we can infer aspects of your attitudes from your acquisition and enthusiasm for donuts. In most cases we’re interested not just in your pursuit of pastries, but how you’d be willing to trade for those pastries. We seek competitive advantage for our own produce to balance the cost owed to the skills of others. This coordinated compromise lies at the core of maximising subjective utility in a market, but at the limit some scenarios do not admit any admixture of goods. Not all babies can be cut in half. But in most cases a consumer will try to optimise their bundle of goods over an entire marketplace, preserving enough on one key good; money, to remain liquid. So, to a first approximation our utility estimate would seem to be a multivariate function. def linear_utility(x, a=2, b=4): # This works fine on smaller numbers return a + b*x def quadriatic_utility(x, b=0.5): return x - (b)*(x**2) def logarithmic_utility(x, a, b): return np.log(a) + b*np.log(x) def negative_exp_utility(x, c=.5): return -np.exp(-(c*x)) def narrow_power(x, B=2): return (B / (B - 1))*(x**(1 - (1/B))) xdata = np.linspace(0, 10, 100) negExp = negative_exp_utility(xdata, 0.5) quad = quadriatic_utility(xdata, 0.5) narrow_pow = narrow_power(xdata, 2) lin = linear_utility(xdata, 2, 3) # Create plot fig, ((ax0, ax1), (ax2, ax3)) = plt.subplots(2, 2) ax0.plot(xdata, negExp, label=&quot;-exp(-b*Q)&quot;) ax0.set_title(&quot;Negative Exponential Utility Curve&quot;) temp = ax0.set_xticks([]) temp = ax0.set_yticks([]) temp =ax0.set_ylabel(&quot;U(Q)&quot;) ax0.legend() ax0.titlesize = 10 ax1.plot(xdata, quad, label=&quot;Q - b*Q^2&quot;) ax1.set_title(&quot;Quadratic Utility Curve&quot;) temp = ax1.set_xticks([]) temp = ax1.set_yticks([]) ax1.legend() ax2.plot(xdata, lin, label=&quot;a + b*Q&quot;) ax2.set_title(&quot;Linear Utility Curve&quot;) temp = ax2.set_yticks([]) temp = ax2.set_xticks([]) temp = ax2.set_ylabel(&quot;U(Q)&quot;) temp = ax2.set_xlabel(&quot;Q&quot;) ax2.legend() ax3.plot(xdata, narrow_pow, label=&quot;(b / (b-1))*Q^(1-(1/b))&quot;) ax3.set_title(&quot;Narrow Power Utility Curve&quot;) temp = ax3.set_yticks([]) temp = ax3.set_xticks([]) temp = ax3.set_xlabel(&quot;Q&quot;) ax3.legend() for _ax in [ax0, ax1, ax2, ax3]: _ax.spines[&quot;right&quot;].set_visible(False) _ax.spines[&quot;top&quot;].set_visible(False) fig.suptitle(&quot;Utility measures over increasing quantities of a good&quot;) plt.show() All remarks on Schizophrenia in the following draw on the precise and personal essays in (Wang 2019)↩︎ For a typical example of how \\(EV\\) is used to express decisions under uncertainty see chapter 7 in the textbook (Barber 2012), but the paradigm owes much of its influence to decision theoretic work of Leonard Savage in (Savage 1954)↩︎ \"The mind has been taken over. The mind has lost the ability to make rational decisions in (Wang 2019) pg58↩︎ “The Slender Man, the Nothing and Me” in (Wang 2019)↩︎ "],["literature.html", "Chapter 3 Literature", " Chapter 3 Literature Here is a review of existing methods. "],["methods.html", "Chapter 4 Methods", " Chapter 4 Methods We describe our methods in this chapter. "],["applications.html", "Chapter 5 Applications 5.1 Example one 5.2 Example two", " Chapter 5 Applications Some significant applications are demonstrated in this chapter. 5.1 Example one 5.2 Example two "],["final-words.html", "Chapter 6 Final Words", " Chapter 6 Final Words We have finished a nice book. "],["references.html", "References", " References Angrist, Joshua D., and Jörn-Steffen Pischke. 2008. Mostly Harmless Econometrics: An Empiricist’s Companion. Princeton University Press. Barber, David. 2012. Bayesian Reasoning and Machine Learning. Cambridge University Press. Cox, David R. 2006. Principles of Statistical Inference. Cambridge University Press. Freedman, David A. 2009. Statistical Models and Causal Inference: A Dialogue with the Social Sciences. Cambridge University Press. Hacking, Ian. 2006. The Emergence of Probability: A Philosophical Study of Early Ideas about Probability, Induction and Statistical Inference. 2nd ed. Cambridge University Press. Lindley, D. V. 1993. “The Analysis of Experimental Data: The Appreciation of Tea and Wine.” Teaching Statistics. Meehl, Paul E. 1978. “Theoretical Risks and Tabular Asterisks: Sir Karl, Sir Ronald, and the Slow Progress of Soft Psychology.” Journal of Consulting and Clinical Psychology 46. Savage, L. 1954. The Foundations of Statistics. Wiley. Stigler, S. M. 2016. The Seven Pillars of Statistical Wisdom. Harvard University Press. Wang, Esme Weijun. 2019. The Collected Schizophrenias. Penguin. "]]
